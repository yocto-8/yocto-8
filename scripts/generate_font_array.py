#!/usr/bin/env python3

# transform a pico-8 font (as distributed on the pico-8 website) in .png form to a C++ header.

# the PICO-8 font is distributed under the CC-0 license (public domain).
# see: https://www.lexaloffle.com/pico-8.php

# this script is distributed under the same license as the yocto-8 project (see LICENSE.md).
# however, the header generated by this script is not bound by the yocto-8 project license.
# hence, you can freely use the output of this script for your own project with no condition.

from PIL import Image

img = Image.open("font.png")
byte_count = (img.width * img.height) // 8
glyphs_per_line = img.width // 8
assert(byte_count == 2048)

print(
f"""#pragma once

// generated with scripts/generate_font_array.py

#include <array>
#include <cstdint>

namespace video
{{

static constexpr std::array<std::uint8_t, {byte_count}> pico8_builtin_font = {{""")

for glyph_index in range(byte_count // 8):
    glyph_char = chr(glyph_index)

    if glyph_char.isprintable():
        print(f"\t// glyph {glyph_index} ('{glyph_char}')")
    else:
        print(f"\t// glyph {glyph_index}")
    
    glyph_x = (glyph_index % glyphs_per_line) * 8
    glyph_y = (glyph_index // glyphs_per_line) * 8

    for y in range(8):
        bits = []

        for x in range(8):
            # don't bother unpacking as this could be RGB or RGBA data
            colors = img.getpixel((glyph_x + x, glyph_y + y))

            bits.append('1' if colors[0] > 127 else '0')
        
        bits.reverse()
        print(f"\t0b{''.join(bits)}, ")
    
    print()

print(
"""};

}"""
)